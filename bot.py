from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ConversationHandler, ContextTypes

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
COUNTRY, SPECIALTY, BUDGET, LANGUAGE = range(4)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –î–∞–≤–∞–π –ø–æ–¥–±–µ—Ä—ë–º —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç. –í –∫–∞–∫–æ–π —Å—Ç—Ä–∞–Ω–µ —Ö–æ—á–µ—à—å —É—á–∏—Ç—å—Å—è?")
    return COUNTRY

async def country(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["country"] = update.message.text
    await update.message.reply_text("–û–∫–µ–π! –ê –∫–∞–∫–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä: IT, –º–µ–¥–∏—Ü–∏–Ω–∞, –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞)?")
    return SPECIALTY

async def specialty(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["specialty"] = update.message.text
    await update.message.reply_text("–•–æ—Ä–æ—à–æ. –ö–∞–∫–æ–π —É —Ç–µ–±—è –±—é–¥–∂–µ—Ç –≤ –≥–æ–¥ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 5000 –µ–≤—Ä–æ)?")
    return BUDGET

async def budget(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["budget"] = update.message.text
    await update.message.reply_text("–ü—Ä–∏–Ω—è—Ç–æ. –ù–∞ –∫–∞–∫–æ–º —è–∑—ã–∫–µ —Ö–æ—á–µ—à—å —É—á–∏—Ç—å—Å—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: –∞–Ω–≥–ª–∏–π—Å–∫–∏–π)?")
    return LANGUAGE

async def language(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["language"] = update.message.text

    country = context.user_data["country"]
    specialty = context.user_data["specialty"]
    budget = context.user_data["budget"]
    language = context.user_data["language"]

    await update.message.reply_text(
        f"–¢—ã –≤—ã–±—Ä–∞–ª:\n"
        f"üåç –°—Ç—Ä–∞–Ω–∞: {country}\n"
        f"üìö –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {specialty}\n"
        f"üí∞ –ë—é–¥–∂–µ—Ç: {budget}\n"
        f"üó£ –Ø–∑—ã–∫: {language}\n\n"
        f"–¢–µ–ø–µ—Ä—å —è –º–æ–≥—É –∏—Å–∫–∞—Ç—å —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—ã –ø–æ —ç—Ç–∏–º —Ñ–∏–ª—å—Ç—Ä–∞–º!"
    )
    return ConversationHandler.END

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–î–∏–∞–ª–æ–≥ –ø—Ä–µ—Ä–≤–∞–Ω.")
    return ConversationHandler.END

import asyncio

async def main():
    app = Application.builder().token("8350744806:AAGTMP5KG_wdLlO8CF3pham9CKF4YPhnxlk").build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            COUNTRY: [MessageHandler(filters.TEXT & ~filters.COMMAND, country)],
            SPECIALTY: [MessageHandler(filters.TEXT & ~filters.COMMAND, specialty)],
            BUDGET: [MessageHandler(filters.TEXT & ~filters.COMMAND, budget)],
            LANGUAGE: [MessageHandler(filters.TEXT & ~filters.COMMAND, language)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    app.add_handler(conv_handler)

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    await app.run_polling(close_loop=False)

if __name__ == "__main__":
    import asyncio
    import nest_asyncio
    nest_asyncio.apply()
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π event loop
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)
    
    try:
        loop.run_until_complete(main())
    finally:
        loop.close()

